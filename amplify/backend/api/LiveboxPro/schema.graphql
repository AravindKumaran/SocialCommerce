type User @model {
  bio: String
  createdAt: AWSDateTime!
  facebook: String
  followers: [Follow]
  following: [Follow]
  id: String!
  imageUri: String
  instagram: String
  languages: [String]
  name: String
  notifications: [UserNotification] @connection(keyName: "notificationsByUser", fields: ["id"])
  posts: [Post] @connection(keyName: "postsByUser", fields: ["id"])
  updatedAt: AWSDateTime!
  username: String!
  youtube: String
  supports: [Support] @connection(keyName: "supportsByUser", fields: ["id"])
}

type Support @model 
@key(name: "supportsByUser", fields: ["userID"]) {
  createdAt: AWSDateTime!
  id: ID!
  query: String
  message: String
  userID: String!
  user: User @connection(fields: ["userID"])  
  updatedAt: AWSDateTime! 
}

type Song @model {
  createdAt: AWSDateTime!
  id: ID!
  imageUri: String
  name: String!
  updatedAt: AWSDateTime!
}

type Post @model 
@key(name: "postsByUser", fields: ["userID"]) {
  brand: String
  category: String!
  comments: [Comment] @connection(keyName: "commentsByPost", fields: ["id"])
  createdAt: AWSDateTime!
  description: String!
  id: ID!
  likes: [String]
  songID: ID!
  song: Song @connection(fields: ["songID"])
  thumbnail: String
  updatedAt: AWSDateTime!
  userID: String!
  user: User @connection(fields: ["userID"])
  videoUri: String!
  views: Int
  hashTag: [PostHashTag] @connection(keyName: "hashTagByPost", fields: ["id"])
  languages: [String]
  isDeleted: Boolean
  audience: [String]
}

type Comment @model 
@key(name: "commentsByPost", fields: ["postId"]) {
  createdAt: AWSDateTime!
  id: ID!
  likes: [String]
  postId: ID!
  post: Post @connection(fields: ["postId"])
  text: String!
  updatedAt: AWSDateTime!
  userID: String!
  user: User @connection(fields: ["userID"])
}

type Notification @model {
  createdAt: AWSDateTime!
  id: ID!
  message: String!
  updatedAt: AWSDateTime!
}

type UserNotification @model 
@key(name: "notificationsByUser", fields: ["userID"]) {
  createdAt: AWSDateTime!
  id: ID!
  notificationID: ID!
  notification: Notification @connection(fields: ["notificationID"])  
  ownerID: String!
  postID: ID!
  post: Post @connection(fields: ["postID"])  
  read: Boolean!
  updatedAt: AWSDateTime!
  userID: String!
  user: User @connection(fields: ["userID"]) 
}

type HashTag @model {
  createdAt: AWSDateTime!
  id: ID!
  name: String!
  updatedAt: AWSDateTime!
}

type PostHashTag @model 
@key(name: "hashTagByPost", fields: ["postID"]) {
  createdAt: AWSDateTime!
  id: ID!
  hashTagID: ID!
  hashTag: HashTag @connection(fields: ["hashTagID"])  
  postID: ID!
  post: Post @connection(fields: ["postID"])  
  updatedAt: AWSDateTime! 
  postDeleted: Boolean
}

type Follow {
  imgUri: String!
  userId: String!
  userName: String!
}

