type User @model {
  id: ID!
  username: String!
  email: String!
  imageUri: String
  posts: [Post] @connection(keyName: "byUser", fields: ["id"])
  followers: [Following]
  following: [Following]
  notifications: [UserNotification]
    @connection(keyName: "byUser", fields: ["id"])
}

type Following {
  userId: ID!
  username: String!
  imageUri: String!
}

type Post @model @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  videoUri: String!
  description: String!
  likes: [ID]

  userID: ID!
  user: User @connection(fields: ["userID"])

  songID: ID!
  song: Song @connection(fields: ["songID"])

  comments: [Comment] @connection(keyName: "commentsByPostId", fields: ["id"])
}

type Comment @model @key(name: "commentsByPostId", fields: ["postId"]) {
  id: ID!
  postId: ID!
  userID: ID!
  text: String!
  likes: [ID]
  user: User @connection(fields: ["userID"])
  post: Post @connection(fields: ["postId"])
}

type Song @model {
  id: ID!
  name: String!
  imageUri: String
}

type Notification @model {
  id: ID!
  message: String!
}

type UserNotification @model @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  userID: ID!
  user: User @connection(fields: ["userID"])
  notificationID: ID!
  notification: Notification @connection(fields: ["notificationID"])
  read: Boolean!
}
